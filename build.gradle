plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.142'
}

version = "${minecraft_version}-${mod_version}"
group = mod_group_id

repositories {
    mavenLocal()
    maven { url "https://maven.blamejared.com" }
    maven {
        url 'https://cursemaven.com'
        content { includeGroup 'curse.maven' }
    }
}
base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.entry public net.minecraft.client.Minecraft textureManager # textureManager
runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        //programArguments '--username', 'Dev###'
    }

    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    implementation "net.neoforged:testframework:21.0.6-beta"
    //annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    //CT Processors
    //annotationProcessor 'com.blamejared.crafttweaker:Crafttweaker_Annotation_Processors:3.0.0.15'
    //annotationProcessor "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    //annotationProcessor "com.blamejared.crafttweaker:CraftTweaker-forge-${minecraft_version}:${ct_version}"

    //compileOnly "top.theillusivec4.curios:curios-forge:${curio_ver}+${minecraft_version}:api"
    //compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.0.195:api")
    //compileOnly fg.deobf("curse.maven:ftbq-${projectid_ftbq}:${version_ftbq}")
    //compileOnly fg.deobf("curse.maven:ftbt-${projectid_ftbt}:${version_ftbt}")
    //compileOnly fg.deobf("curse.maven:ftbl-${projectid_ftbl}:${version_ftbl}")
    //compileOnly fg.deobf("curse.maven:ftbf-${projectid_ftbf}:${version_ftbf}")
    //compileOnly fg.deobf("curse.maven:arch-${projectid_arch}:${version_arch}")
    //compileOnly("com.blamejared.crafttweaker:CraftTweaker-forge-${minecraft_version}:${ct_version}")

    //runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curio_ver}+${minecraft_version}")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.0.195")
    //runtimeOnly fg.deobf("curse.maven:ftbq-${projectid_ftbq}:${version_ftbq}")
    //runtimeOnly fg.deobf("curse.maven:ftbt-${projectid_ftbt}:${version_ftbt}")
    //runtimeOnly fg.deobf("curse.maven:ftbl-${projectid_ftbl}:${version_ftbl}")
    //runtimeOnly fg.deobf("curse.maven:ftbf-${projectid_ftbf}:${version_ftbf}")
    //runtimeOnly fg.deobf("curse.maven:arch-${projectid_arch}:${version_arch}")
    //runtimeOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${minecraft_version}:${ct_version}")
    //runtimeOnly fg.deobf('curse.maven:aquaculture-60028:4074684')
    //runtimeOnly fg.deobf('curse.maven:twilight-227639:4337394')
    //runtimeOnly fg.deobf('curse.maven:travelersbackpack-321117:4595935')
    //runtimeOnly fg.deobf('curse.maven:mmmmmmm-225738:4816636')
    //runtimeOnly fg.deobf('curse.maven:mmmdep-499980:4806893s')
    //runtimeOnly fg.deobf('curse.maven:pst-850298:4745035')
    //runtimeOnly fg.deobf('curse.maven:attributefix-280510:4844658')
    //runtimeOnly fg.deobf('curse.maven:maxhealthfix-492246:4714765')
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description, pack_format_number: pack_format_number,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}
test {
    useJUnitPlatform()
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}